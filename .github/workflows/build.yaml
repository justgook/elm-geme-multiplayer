name: Release

on:
  push:
    branches:
      - release

jobs:
  dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
#      - name: TEMPORARY act workaround
#        run: apt update && apt install zstd

      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          persist-credentials: false

      - name: Setup Node.js for use with actions
        uses: actions/setup-node@v2.1.4
        with:
          node-version: '15.x'

      - name: Set yarn
        id: yarn
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: |
          echo "::set-output name=dir::$(yarn cache dir)"
          echo "::add-path::$(yarn bin)"
          echo "::add-path::$(yarn global bin)"

      - name: Get Yarn cache
        uses: actions/cache@v2.1.3
        id: yarn-cache-exists
        with:
          path: ${{ steps.yarn.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Get node_modules
        uses: actions/cache@v2.1.3
        id: node_modules-cache-exists
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Get elm-stuff
        uses: actions/cache@v2.1.3
        id: elm-stuff-cache-exists
        with:
          path: ./elm-stuff
          key: ${{ runner.os }}-elm-stuff-${{ hashFiles('**/elm-json') }}
          restore-keys: |
            ${{ runner.os }}-elm-stuff-

      - name: Install Dependencies
        #if: steps.yarn-cache-exists.outputs.cache-hit != 'true'
        run: |
          yarn --frozen-lockfile

#  build:
#    name: Build
#    needs: [dependencies]
#    runs-on: ubuntu-latest
#    steps:
      - name: Build
        run: |
          echo "YARN: $(yarn --version)"
          echo "NODE: $(node --version)"
          echo "Working Directory: $(ls)"
          yarn build
      #          node build-assets.js
      #        elm make src/Main.elm --optimize --output=./gh-pages/bundle.js
      #
      #    - name: Optimize Javascript Jump
      #      uses: ./.github/actions/optimize-js
      #      with:
      #        file: ./gh-pages/bundle.js
      #        transform: ./examples/transform.js


#      - name: Building HTML
#        env:
#          NODE_ENV: production
#          BUNDLE_JS: jump.js
#
#        run: posthtml ./gh-pages/index_template.html -o ./gh-pages/index.html -c posthtml.config.js
#

#  test:
#    name: Test
#    needs: [ build ]
#    runs-on: ubuntu-latest
#    steps:
      - name: Elm Test
        run: yarn test

#  release:
##    if: github.event_name == 'pull_request'
##    - name: Move files
##      run: |
##        mkdir ./public
##        mv ./index.html ./public/
#    name: Release
#    needs: [build, test]
#    runs-on: ubuntu-latest
#    steps:

      - name: GitHub Pages action
        uses: peaceiris/actions-gh-pages@v3.7.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target
          keep_files: true
          destination_dir: subdir
          exclude_assets: "/**.elm"
          cname: pandemic.z0.lv
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
#          commit_message: ${{ github.event.head_commit.message }}